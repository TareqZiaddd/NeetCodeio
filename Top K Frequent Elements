

حسنًا، إليك مثال على الإدخال والإخراج للكود:

الإدخال:

int[] nums = {1, 1, 1, 2, 2, 3};
int k = 2;
الإخراج:

[1, 2]
كما ترى، فإن الإدخال عبارة عن مصفوفة من الأعداد الصحيحة وعدد k. والإخراج عبارة عن مصفوفة من أعلى k رقمًا متكررًا في المصفوفة الأصلية.

فيما يلي مثال آخر:

الإدخال:

int[] nums = {1, 2, 3, 1, 1, 2, 2, 2};
int k = 3;
الإخراج:

[2, 1, 3]
في هذا المثال، تكون المصفوفة الأصلية هي {1, 2, 3, 1, 1, 2, 2, 2}. ونريد تحديد أعلى 3 عناصر متكررة في المصفوفة، والتي هي {2, 1, 3}.

أتمنى أن يساعد هذا!
	 */
	//هاش ماب +فورلوب +انيدكس+كاونت للهاش +ليست للمفاتيح + 
	  public int[] topKFrequent(int[] nums, int k) {
			  
		  HashMap <Integer,Integer>map = new HashMap <>();
		  
		  
		  for (int i = 0 ; i<nums.length;i++) {
			  int number=nums[i];
			  int count = map.getOrDefault(number, 0);
			  map.put(number, count + 1);
			  // في كل مرة يجيك النمبر زيد الkey
			  //بمقدار واحد
			  
			  // إنشاء قائمة للمفاتيح (الأعداد) من الخريطة
		        List<Integer> list = new ArrayList<>(map.keySet());

		        // ترتيب القائمة حسب عدد التكرارات
		        list.sort((a, b) -> map.get(b) - map.get(a));

		        // إنشاء مصفوفة للإخراج
		        int[] result = new int[k];
		        for (int i = 0; i < k; i++) {
		            result[i] = list.get(i);
		        }

		        return result;
		    }
			  
		  }
		  
		  
		  
		  
		  
		  
	  }
	
	
